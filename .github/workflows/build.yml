name: Build
on:
  push:
    branches: [main, develop, workflows]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      INFLUXDB_URL: https://dl.influxdata.com/influxdb/releases
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest]
        node: [16]
        include:
          - os: ubuntu-22.04
            os_family: Linux
            influxdb_version: influxdb2-2.3.0-linux-amd64
            influxdb_client_version: influxdb2-client-2.3.0-linux-amd64
          - os: windows-latest
            os_family: Windows
            influxdb_version: influxdb2-2.3.0-windows-amd64
            influxdb_client_version: influxdb2-client-2.3.0-windows-amd64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r device-identifier/requirements.txt
      - name: Build Python distributable for ${{ matrix.os }}
        run: |
          cd device-identifier
          pyinstaller cli.py
      - name: Set Linux Environment Variables
        if: ${{ matrix.os_family == 'Linux'}}
        run: |
          echo ::set-env name=influxdb_archive::${{ matrix.influxdb_version }}.tar.gz
          echo ::set-env name=influxdb_full_url::${{ env.INFLUXDB_URL }}/$influxdb_archive
          echo ::set-env name=influxdb_client_archive::${{ matrix.influxdb_client_version }}.tar.gz
          echo ::set-env name=influxdb_client_full_url::${{ env.INFLUXDB_URL }}/$influxdb_client_archive
      - name: Get InfluxDB for Linux
        if: ${{ matrix.os_family == 'Linux'}}
        run: |
          mkdir -p InfluxData/influxdb
          wget $influxdb_full_url
          tar xvzf $influxdb_archive
          mv ${{ matrix.influxdb_version }}/* InfluxData/influxdb
      - name: Get InfluxDB Client for Linux
        if: ${{ matrix.os_family == 'Linux'}}
        run: |
          mkdir -p InfluxData/influxdb-client
          wget $influxdb_client_full_url
          tar xvzf $influxdb_client_archive
          mv ${{ matrix.influxdb_client_version }}/* InfluxData/influxdb-client
      - name: Set Windows Environment Variables
        if: ${{ matrix.os_family == 'Windows'}}
        run: |
          echo ::set-env name=influxdb_archive::${{ matrix.influxdb_version }}.zip
          echo ::set-env name=influxdb_full_url::${{ env.INFLUXDB_URL }}/$influxdb_archive
          echo ::set-env name=influxdb_client_archive::${{ matrix.influxdb_client_version }}.zip
          echo ::set-env name=influxdb_client_full_url::${{ env.INFLUXDB_URL }}/$influxdb_client_archive
      - name: Get InfluxDB for Windows
        if: ${{ matrix.os_family == 'Windows'}}
        run: |
          mkdir -p InfluxData/influxdb
          wget $influxdb_full_url
          unzip $influxdb_client_archive
          mv ${{ matrix.influxdb_version }}/* InfluxData/influxdb
      - name: Get InfluxDB Client for Windows
        if: ${{ matrix.os_family == 'Windows'}}
        run: |
          mkdir -p InfluxData/influxdb-client
          wget $influxdb_full_url
          unzip $influxdb_client_archive
          mv ${{ matrix.influxdb_client_version }}/* InfluxData/influxdb-client
      - uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node }}
      - name: Install nodeJS dependencies
        run: |
          cd electron-app
          npm ci
      - name: Build SmartHomeBuddy for ${{ matrix.os }}
        run: |
          cd electron-app
          npm run make
