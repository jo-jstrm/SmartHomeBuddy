# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: shbdeviceidentifier/rpc/proto/heartbeat.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-shbdeviceidentifier/rpc/proto/heartbeat.proto\"!\n\x10HeartbeatRequest\x12\r\n\x05\x63ount\x18\x01 \x01(\x05\"\"\n\x11HeartbeatResponse\x12\r\n\x05\x61live\x18\x01 \x01(\x08\x32\x42\n\tHeartbeat\x12\x35\n\x0cGetHeartbeat\x12\x11.HeartbeatRequest\x1a\x12.HeartbeatResponseb\x06proto3')



_HEARTBEATREQUEST = DESCRIPTOR.message_types_by_name['HeartbeatRequest']
_HEARTBEATRESPONSE = DESCRIPTOR.message_types_by_name['HeartbeatResponse']
HeartbeatRequest = _reflection.GeneratedProtocolMessageType('HeartbeatRequest', (_message.Message,), {
  'DESCRIPTOR' : _HEARTBEATREQUEST,
  '__module__' : 'shbdeviceidentifier.rpc.proto.heartbeat_pb2'
  # @@protoc_insertion_point(class_scope:HeartbeatRequest)
  })
_sym_db.RegisterMessage(HeartbeatRequest)

HeartbeatResponse = _reflection.GeneratedProtocolMessageType('HeartbeatResponse', (_message.Message,), {
  'DESCRIPTOR' : _HEARTBEATRESPONSE,
  '__module__' : 'shbdeviceidentifier.rpc.proto.heartbeat_pb2'
  # @@protoc_insertion_point(class_scope:HeartbeatResponse)
  })
_sym_db.RegisterMessage(HeartbeatResponse)

_HEARTBEAT = DESCRIPTOR.services_by_name['Heartbeat']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _HEARTBEATREQUEST._serialized_start=49
  _HEARTBEATREQUEST._serialized_end=82
  _HEARTBEATRESPONSE._serialized_start=84
  _HEARTBEATRESPONSE._serialized_end=118
  _HEARTBEAT._serialized_start=120
  _HEARTBEAT._serialized_end=186
# @@protoc_insertion_point(module_scope)
